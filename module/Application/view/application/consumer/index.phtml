<?php
$this->headTitle('Consumers');

if ($order == 'asc') {
    $orderClass = 'glyphicon-triangle-bottom';
} else {
    $orderClass = 'glyphicon-triangle-top';
}

$form = $this->form;

$form->get('expirationDateTime')->setAttributes([
        'class'=>'form-control',
        'placeholder'=>'Enter Expiration Date Time',
    ]);
$form->get('groupId')->setAttributes([
        'class'=>'form-control',
    ]);

$form->add([
    'type'  => 'submit',
    'name' => 'submit',
    'attributes' => [
        'value' => 'Search',
        'class'=>'btn btn-primary'
    ],
]);

$form->prepare();
?>

<h1>Manage Consumers</h1>

<p>
<a class="btn btn-default" href="
    <?= $this->url('consumer', ['action'=>'create']); ?>">
    <span class="glyphicon glyphicon-plus" aria-hidden="true"></span> New Consumer
</a>


<div class="row">
    <div class="col-md-4">
        <?= $this->form()->openTag($form); ?>

        <div class="form-group">
            <?= $this->formLabel($form->get('expirationDateTime')); ?>
            <?= $this->datetimepicker($form->get('expirationDateTime')); ?>
            <?= $this->formElementErrors($form->get('expirationDateTime')); ?>
        </div>

        <div class="form-group">
            <?= $this->formLabel($form->get('groupId')); ?>
            <?= $this->formElement($form->get('groupId')); ?>
            <?= $this->formElementErrors($form->get('groupId')); ?>
        </div>

        <?= $this->formElement($form->get('submit')); ?>

        <?= $this->form()->closeTag(); ?>
    </div>
</div>

</p>

<table class="table table-striped">

   <tr>
        <th>
            <a href="<?=$this->url(
                'consumer',
                [
                    'action' => 'index',
                ],
                [
                    'query' => array_merge($filter, [
                        'orderBy' => 'consumerId',
                        'order' => ($orderBy == 'consumerId' && $order == 'asc') ? 'desc' : 'asc',
                    ]),
                ]
            )?>">Consumer ID <?php
                if ($orderBy == 'consumerId') {
                    ?><span class="glyphicon <?=$orderClass?>"></span><?php
                } ?></a>
        </th>
        <th>Avatar</th>
        <th><a href="<?=$this->url(
                'consumer',
                [
                    'action' => 'index',
                ],
                [
                    'query' => array_merge($filter, [
                        'orderBy' => 'login',
                        'order' => ($orderBy == 'login' && $order == 'asc') ? 'desc' : 'asc',
                    ]),
                ]
            )?>">Login <?php
                if ($orderBy == 'login') {
                    ?><span class="glyphicon <?=$orderClass?>"></span><?php
                } ?></a></th>
        <th><a href="<?=$this->url(
                'consumer',
                [
                    'action' => 'index',
                ],
                [
                    'query' => array_merge($filter, [
                        'orderBy' => 'email',
                        'order' => ($orderBy == 'email' && $order == 'asc') ? 'desc' : 'asc',
                    ]),
                ]
            )?>">Email <?php
                if ($orderBy == 'email') {
                    ?><span class="glyphicon <?=$orderClass?>"></span><?php
                } ?></a></th>
        <th><a href="<?=$this->url(
                'consumer',
                [
                    'action' => 'index',
                ],
                [
                    'query' => array_merge($filter, [
                        'orderBy' => 'expirationDateTime',
                        'order' => ($orderBy == 'expirationDateTime' && $order == 'asc') ? 'desc' : 'asc',
                    ]),
                ]
            )?>">Expiration Date Time <?php
                if ($orderBy == 'expirationDateTime') {
                    ?><span class="glyphicon <?=$orderClass?>"></span><?php
                } ?></a></th>
        <th><a href="<?=$this->url(
                'consumer',
                [
                    'action' => 'index',
                ],
                [
                    'query' => array_merge($filter, [
                        'orderBy' => 'group',
                        'order' => ($orderBy == 'group' && $order == 'asc') ? 'desc' : 'asc',
                    ]),
                ]
            )?>">Group <?php
                if ($orderBy == 'group') {
                    ?><span class="glyphicon <?=$orderClass?>"></span><?php
                } ?></a></th>
        <th>Actions</th>
    </tr>

    <?php foreach ($consumers as $consumer) {
        $viewUrl = $this->url('consumer', ['action' => 'view', 'id' => $consumer->getId()]);
        $editUrl = $this->url('consumer', ['action' => 'edit', 'id' => $consumer->getId()]);
        $deleteUrl = $this->url('consumer', ['action' => 'delete', 'id' => $consumer->getId()]);
    ?><tr>
        <td><?= $this->escapeHtml($consumer->getId()); ?></td>
        <td><?php
            if ($consumer->getAvatarFileName()) {
                ?><img src="<?=$this->url('images', ['width' => 50, 'file' => $consumer->getAvatarFileName()]) ?>"/><?php
            } else {
                ?>Not set<?php
            }?>
        </td>
        <td><?= $this->escapeHtml($consumer->getLogin()); ?></td>
        <td><?= $this->escapeHtml($consumer->getEmail()); ?></td>
        <td><?= $this->escapeHtml($consumer->getExpirationDateTime()); ?></td>
        <td><?= $this->escapeHtml($consumer->getGroup()->getName()); ?></td>
        <td>
            <a href="<?= $viewUrl ?>" title="View">
                <span class="glyphicon glyphicon-eye-open"></span>
            </a>
            <a href="<?= $editUrl ?>" title="Edit">
                <span class="glyphicon glyphicon glyphicon-pencil"></span>
            </a>
            <a href="<?= $deleteUrl ?>" title="Delete">
                <span class="glyphicon glyphicon glyphicon-trash"></span>
            </a>
        </td>
    </tr>

    <?php }?>

</table><?php

echo $this->paginationControl(
    $consumers,
    'Sliding',
    'application/partial/paginator',
    [
        'route' => 'consumer',
        'action' => 'index',

        'force_canonical' => true,
        'query' => array_merge($filter,[
            'orderBy' => $orderBy,
            'order' => $order,
        ]),
    ]
);

